kind: pipeline
type: docker
name: default

steps:
  - name: restore-cache-with-filesystem
    image: meltwater/drone-cache
    pull: true
    settings:
      backend: "filesystem"
      restore: true
      cache_key: "volume"
      archive_format: "gzip"
      # filesystem_cache_root: "/tmp/cache"
      mount:
        - 'vendor'
    volumes:
      - name: cache
        path: /tmp/cache

  - name: tests
    image: golang:1.18
    commands:
      - go mod tidy
      - go test

  - name: publish
    image: plugins/docker
    settings:
      repo: dapmoed/${DRONE_REPO_NAME}
      tags:
        - latest
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password

  - name: rebuild-cache-with-filesystem
    image: meltwater/drone-cache
    pull: true
    settings:
      backend: "filesystem"
      rebuild: true
      cache_key: "volume"
      archive_format: "gzip"
      # filesystem_cache_root: "/tmp/cache"
      mount:
        - 'vendor'
    volumes:
      - name: cache
        path: /tmp/cache

  - name: Syntax Check
    image: plugins/ansible:3
    settings:
      become: true
      playbook: ansible/playbook.yaml
      inventory: ansible/inventory
      private_key:
        from_secret: ansible_private_key
      ssh_extra_args: "-o StrictHostKeyChecking=no"
      syntax_check: true

  - name: Apply Playbook
    image: plugins/ansible
    settings:
      become: true
      playbook: ansible/playbook.yaml
      inventory: ansible/inventory
      private_key:
        from_secret: ansible_private_key
      ssh_extra_args: "-o StrictHostKeyChecking=no"
      verbose: 0

  - name: notify
    image: appleboy/drone-telegram
    settings:
      token:
        from_secret: tg_token
      to: -1001731607931
    when:
      status:
        - success
        - failure

volumes:
  - name: cache
    temp: {}

trigger:
  branch:
    - main